#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BanDongHo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BANDONGHO")]
	public partial class BANDONGHODataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIETDONHANG(CHITIETDONHANG instance);
    partial void UpdateCHITIETDONHANG(CHITIETDONHANG instance);
    partial void DeleteCHITIETDONHANG(CHITIETDONHANG instance);
    partial void InsertCHITIETKM(CHITIETKM instance);
    partial void UpdateCHITIETKM(CHITIETKM instance);
    partial void DeleteCHITIETKM(CHITIETKM instance);
    partial void InsertCHITIETSANPHAM(CHITIETSANPHAM instance);
    partial void UpdateCHITIETSANPHAM(CHITIETSANPHAM instance);
    partial void DeleteCHITIETSANPHAM(CHITIETSANPHAM instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertLOAITK(LOAITK instance);
    partial void UpdateLOAITK(LOAITK instance);
    partial void DeleteLOAITK(LOAITK instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertMAUSAC(MAUSAC instance);
    partial void UpdateMAUSAC(MAUSAC instance);
    partial void DeleteMAUSAC(MAUSAC instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertSIZE(SIZE instance);
    partial void UpdateSIZE(SIZE instance);
    partial void DeleteSIZE(SIZE instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTHUONGHIEU(THUONGHIEU instance);
    partial void UpdateTHUONGHIEU(THUONGHIEU instance);
    partial void DeleteTHUONGHIEU(THUONGHIEU instance);
    #endregion
		
		public BANDONGHODataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BANDONGHOConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BANDONGHODataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BANDONGHODataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BANDONGHODataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BANDONGHODataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this.GetTable<CHITIETKM>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this.GetTable<CHITIETSANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<LOAITK> LOAITKs
		{
			get
			{
				return this.GetTable<LOAITK>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<MAUSAC> MAUSACs
		{
			get
			{
				return this.GetTable<MAUSAC>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<SIZE> SIZEs
		{
			get
			{
				return this.GetTable<SIZE>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<THUONGHIEU> THUONGHIEUs
		{
			get
			{
				return this.GetTable<THUONGHIEU>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONHANG")]
	public partial class CHITIETDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADH;
		
		private string _MASP;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(string value);
    partial void OnMADHChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETDONHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_DONHANG", ThisKey="MADH", OtherKey="MADH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MADH = value.MADH;
					}
					else
					{
						this._MADH = default(string);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDONHANG", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETKM")]
	public partial class CHITIETKM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACTKM;
		
		private string _MAKM;
		
		private string _MASP;
		
		private System.Nullable<System.DateTime> _NGAYBATDAUKM;
		
		private System.Nullable<System.DateTime> _NGAYKETTHUCKM;
		
		private System.Nullable<int> _PHANTRAMKM;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACTKMChanging(string value);
    partial void OnMACTKMChanged();
    partial void OnMAKMChanging(string value);
    partial void OnMAKMChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnNGAYBATDAUKMChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBATDAUKMChanged();
    partial void OnNGAYKETTHUCKMChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKETTHUCKMChanged();
    partial void OnPHANTRAMKMChanging(System.Nullable<int> value);
    partial void OnPHANTRAMKMChanged();
    #endregion
		
		public CHITIETKM()
		{
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACTKM", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACTKM
		{
			get
			{
				return this._MACTKM;
			}
			set
			{
				if ((this._MACTKM != value))
				{
					this.OnMACTKMChanging(value);
					this.SendPropertyChanging();
					this._MACTKM = value;
					this.SendPropertyChanged("MACTKM");
					this.OnMACTKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="Char(7)")]
		public string MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(7)")]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBATDAUKM", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYBATDAUKM
		{
			get
			{
				return this._NGAYBATDAUKM;
			}
			set
			{
				if ((this._NGAYBATDAUKM != value))
				{
					this.OnNGAYBATDAUKMChanging(value);
					this.SendPropertyChanging();
					this._NGAYBATDAUKM = value;
					this.SendPropertyChanged("NGAYBATDAUKM");
					this.OnNGAYBATDAUKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKETTHUCKM", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYKETTHUCKM
		{
			get
			{
				return this._NGAYKETTHUCKM;
			}
			set
			{
				if ((this._NGAYKETTHUCKM != value))
				{
					this.OnNGAYKETTHUCKMChanging(value);
					this.SendPropertyChanging();
					this._NGAYKETTHUCKM = value;
					this.SendPropertyChanged("NGAYKETTHUCKM");
					this.OnNGAYKETTHUCKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHANTRAMKM", DbType="Int")]
		public System.Nullable<int> PHANTRAMKM
		{
			get
			{
				return this._PHANTRAMKM;
			}
			set
			{
				if ((this._PHANTRAMKM != value))
				{
					this.OnPHANTRAMKMChanging(value);
					this.SendPropertyChanging();
					this._PHANTRAMKM = value;
					this.SendPropertyChanged("PHANTRAMKM");
					this.OnPHANTRAMKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKM", Storage="_KHUYENMAI", ThisKey="MAKM", OtherKey="MAKM", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.CHITIETKMs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.CHITIETKMs.Add(this);
						this._MAKM = value.MAKM;
					}
					else
					{
						this._MAKM = default(string);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETKM", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETKMs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETKMs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETSANPHAM")]
	public partial class CHITIETSANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _MASIZE;
		
		private string _MAMAU;
		
		private string _MALOAISP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<decimal> _DONGIA;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
		private EntityRef<MAUSAC> _MAUSAC;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<SIZE> _SIZE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnMASIZEChanging(string value);
    partial void OnMASIZEChanged();
    partial void OnMAMAUChanging(string value);
    partial void OnMAMAUChanged();
    partial void OnMALOAISPChanging(string value);
    partial void OnMALOAISPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<decimal> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CHITIETSANPHAM()
		{
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			this._MAUSAC = default(EntityRef<MAUSAC>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._SIZE = default(EntityRef<SIZE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASIZE", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASIZE
		{
			get
			{
				return this._MASIZE;
			}
			set
			{
				if ((this._MASIZE != value))
				{
					if (this._SIZE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASIZEChanging(value);
					this.SendPropertyChanging();
					this._MASIZE = value;
					this.SendPropertyChanged("MASIZE");
					this.OnMASIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMAU", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMAU
		{
			get
			{
				return this._MAMAU;
			}
			set
			{
				if ((this._MAMAU != value))
				{
					if (this._MAUSAC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMAUChanging(value);
					this.SendPropertyChanging();
					this._MAMAU = value;
					this.SendPropertyChanged("MAMAU");
					this.OnMAMAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAISP", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAISP
		{
			get
			{
				return this._MALOAISP;
			}
			set
			{
				if ((this._MALOAISP != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAISPChanging(value);
					this.SendPropertyChanging();
					this._MALOAISP = value;
					this.SendPropertyChanged("MALOAISP");
					this.OnMALOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Money")]
		public System.Nullable<decimal> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_CHITIETSANPHAM", Storage="_LOAISANPHAM", ThisKey="MALOAISP", OtherKey="MALOAISP", IsForeignKey=true)]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.CHITIETSANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETSANPHAMs.Add(this);
						this._MALOAISP = value.MALOAISP;
					}
					else
					{
						this._MALOAISP = default(string);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_CHITIETSANPHAM", Storage="_MAUSAC", ThisKey="MAMAU", OtherKey="MAMAU", IsForeignKey=true)]
		public MAUSAC MAUSAC
		{
			get
			{
				return this._MAUSAC.Entity;
			}
			set
			{
				MAUSAC previousValue = this._MAUSAC.Entity;
				if (((previousValue != value) 
							|| (this._MAUSAC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAUSAC.Entity = null;
						previousValue.CHITIETSANPHAMs.Remove(this);
					}
					this._MAUSAC.Entity = value;
					if ((value != null))
					{
						value.CHITIETSANPHAMs.Add(this);
						this._MAMAU = value.MAMAU;
					}
					else
					{
						this._MAMAU = default(string);
					}
					this.SendPropertyChanged("MAUSAC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETSANPHAM", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETSANPHAMs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETSANPHAMs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_CHITIETSANPHAM", Storage="_SIZE", ThisKey="MASIZE", OtherKey="MASIZE", IsForeignKey=true)]
		public SIZE SIZE
		{
			get
			{
				return this._SIZE.Entity;
			}
			set
			{
				SIZE previousValue = this._SIZE.Entity;
				if (((previousValue != value) 
							|| (this._SIZE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIZE.Entity = null;
						previousValue.CHITIETSANPHAMs.Remove(this);
					}
					this._SIZE.Entity = value;
					if ((value != null))
					{
						value.CHITIETSANPHAMs.Add(this);
						this._MASIZE = value.MASIZE;
					}
					else
					{
						this._MASIZE = default(string);
					}
					this.SendPropertyChanged("SIZE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADH;
		
		private string _MAKH;
		
		private string _TRANGTHAI;
		
		private string _DIACHIGIAO;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private string _MOTA;
		
		private System.Nullable<decimal> _TONGTIEN;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(string value);
    partial void OnMADHChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTRANGTHAIChanging(string value);
    partial void OnTRANGTHAIChanged();
    partial void OnDIACHIGIAOChanging(string value);
    partial void OnDIACHIGIAOChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnTONGTIENChanging(System.Nullable<decimal> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public DONHANG()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(7)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="NVarChar(20)")]
		public string TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHIGIAO", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DIACHIGIAO
		{
			get
			{
				return this._DIACHIGIAO;
			}
			set
			{
				if ((this._DIACHIGIAO != value))
				{
					this.OnDIACHIGIAOChanging(value);
					this.SendPropertyChanging();
					this._DIACHIGIAO = value;
					this.SendPropertyChanged("DIACHIGIAO");
					this.OnDIACHIGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Money")]
		public System.Nullable<decimal> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MADH", OtherKey="MADH")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _MATK;
		
		private string _HOTEN;
		
		private string _GIOITINH;
		
		private string _DIACHI;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _SDT;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMATKChanging(string value);
    partial void OnMATKChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATK", DbType="Char(7)")]
		public string MATK
		{
			get
			{
				return this._MATK;
			}
			set
			{
				if ((this._MATK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATKChanging(value);
					this.SendPropertyChanging();
					this._MATK = value;
					this.SendPropertyChanged("MATK");
					this.OnMATKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(3)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_DONHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_TAIKHOAN", ThisKey="MATK", OtherKey="MATK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._MATK = value.MATK;
					}
					else
					{
						this._MATK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAISP;
		
		private string _TENLOAISP;
		
		private EntitySet<CHITIETSANPHAM> _CHITIETSANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAISPChanging(string value);
    partial void OnMALOAISPChanged();
    partial void OnTENLOAISPChanging(string value);
    partial void OnTENLOAISPChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._CHITIETSANPHAMs = new EntitySet<CHITIETSANPHAM>(new Action<CHITIETSANPHAM>(this.attach_CHITIETSANPHAMs), new Action<CHITIETSANPHAM>(this.detach_CHITIETSANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAISP", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAISP
		{
			get
			{
				return this._MALOAISP;
			}
			set
			{
				if ((this._MALOAISP != value))
				{
					this.OnMALOAISPChanging(value);
					this.SendPropertyChanging();
					this._MALOAISP = value;
					this.SendPropertyChanged("MALOAISP");
					this.OnMALOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAISP", DbType="NVarChar(50)")]
		public string TENLOAISP
		{
			get
			{
				return this._TENLOAISP;
			}
			set
			{
				if ((this._TENLOAISP != value))
				{
					this.OnTENLOAISPChanging(value);
					this.SendPropertyChanging();
					this._TENLOAISP = value;
					this.SendPropertyChanged("TENLOAISP");
					this.OnTENLOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_CHITIETSANPHAM", Storage="_CHITIETSANPHAMs", ThisKey="MALOAISP", OtherKey="MALOAISP")]
		public EntitySet<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this._CHITIETSANPHAMs;
			}
			set
			{
				this._CHITIETSANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITK")]
	public partial class LOAITK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAITK;
		
		private string _TENLOAITK;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAITKChanging(string value);
    partial void OnMALOAITKChanged();
    partial void OnTENLOAITKChanging(string value);
    partial void OnTENLOAITKChanged();
    #endregion
		
		public LOAITK()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAITK", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAITK
		{
			get
			{
				return this._MALOAITK;
			}
			set
			{
				if ((this._MALOAITK != value))
				{
					this.OnMALOAITKChanging(value);
					this.SendPropertyChanging();
					this._MALOAITK = value;
					this.SendPropertyChanged("MALOAITK");
					this.OnMALOAITKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAITK", DbType="NVarChar(20)")]
		public string TENLOAITK
		{
			get
			{
				return this._TENLOAITK;
			}
			set
			{
				if ((this._TENLOAITK != value))
				{
					this.OnTENLOAITKChanging(value);
					this.SendPropertyChanging();
					this._TENLOAITK = value;
					this.SendPropertyChanged("TENLOAITK");
					this.OnTENLOAITKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITK_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MALOAITK", OtherKey="MALOAITK")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAITK = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAITK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKM;
		
		private string _TENKM;
		
		private EntitySet<CHITIETKM> _CHITIETKMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(string value);
    partial void OnMAKMChanged();
    partial void OnTENKMChanging(string value);
    partial void OnTENKMChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._CHITIETKMs = new EntitySet<CHITIETKM>(new Action<CHITIETKM>(this.attach_CHITIETKMs), new Action<CHITIETKM>(this.detach_CHITIETKMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKM", DbType="NVarChar(50)")]
		public string TENKM
		{
			get
			{
				return this._TENKM;
			}
			set
			{
				if ((this._TENKM != value))
				{
					this.OnTENKMChanging(value);
					this.SendPropertyChanging();
					this._TENKM = value;
					this.SendPropertyChanged("TENKM");
					this.OnTENKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKM", Storage="_CHITIETKMs", ThisKey="MAKM", OtherKey="MAKM")]
		public EntitySet<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this._CHITIETKMs;
			}
			set
			{
				this._CHITIETKMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAUSAC")]
	public partial class MAUSAC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMAU;
		
		private string _TENMAU;
		
		private EntitySet<CHITIETSANPHAM> _CHITIETSANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMAUChanging(string value);
    partial void OnMAMAUChanged();
    partial void OnTENMAUChanging(string value);
    partial void OnTENMAUChanged();
    #endregion
		
		public MAUSAC()
		{
			this._CHITIETSANPHAMs = new EntitySet<CHITIETSANPHAM>(new Action<CHITIETSANPHAM>(this.attach_CHITIETSANPHAMs), new Action<CHITIETSANPHAM>(this.detach_CHITIETSANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMAU", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMAU
		{
			get
			{
				return this._MAMAU;
			}
			set
			{
				if ((this._MAMAU != value))
				{
					this.OnMAMAUChanging(value);
					this.SendPropertyChanging();
					this._MAMAU = value;
					this.SendPropertyChanged("MAMAU");
					this.OnMAMAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMAU", DbType="NVarChar(10)")]
		public string TENMAU
		{
			get
			{
				return this._TENMAU;
			}
			set
			{
				if ((this._TENMAU != value))
				{
					this.OnTENMAUChanging(value);
					this.SendPropertyChanging();
					this._TENMAU = value;
					this.SendPropertyChanged("TENMAU");
					this.OnTENMAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_CHITIETSANPHAM", Storage="_CHITIETSANPHAMs", ThisKey="MAMAU", OtherKey="MAMAU")]
		public EntitySet<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this._CHITIETSANPHAMs;
			}
			set
			{
				this._CHITIETSANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = this;
		}
		
		private void detach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _TENSP;
		
		private string _HINHLON;
		
		private string _HINHNHO;
		
		private string _THONGTIN;
		
		private string _MATH;
		
		private string _DANHGIA;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntitySet<CHITIETKM> _CHITIETKMs;
		
		private EntitySet<CHITIETSANPHAM> _CHITIETSANPHAMs;
		
		private EntityRef<THUONGHIEU> _THUONGHIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnHINHLONChanging(string value);
    partial void OnHINHLONChanged();
    partial void OnHINHNHOChanging(string value);
    partial void OnHINHNHOChanged();
    partial void OnTHONGTINChanging(string value);
    partial void OnTHONGTINChanged();
    partial void OnMATHChanging(string value);
    partial void OnMATHChanged();
    partial void OnDANHGIAChanging(string value);
    partial void OnDANHGIAChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._CHITIETKMs = new EntitySet<CHITIETKM>(new Action<CHITIETKM>(this.attach_CHITIETKMs), new Action<CHITIETKM>(this.detach_CHITIETKMs));
			this._CHITIETSANPHAMs = new EntitySet<CHITIETSANPHAM>(new Action<CHITIETSANPHAM>(this.attach_CHITIETSANPHAMs), new Action<CHITIETSANPHAM>(this.detach_CHITIETSANPHAMs));
			this._THUONGHIEU = default(EntityRef<THUONGHIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(50)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHLON", DbType="Char(50)")]
		public string HINHLON
		{
			get
			{
				return this._HINHLON;
			}
			set
			{
				if ((this._HINHLON != value))
				{
					this.OnHINHLONChanging(value);
					this.SendPropertyChanging();
					this._HINHLON = value;
					this.SendPropertyChanged("HINHLON");
					this.OnHINHLONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHNHO", DbType="Char(50)")]
		public string HINHNHO
		{
			get
			{
				return this._HINHNHO;
			}
			set
			{
				if ((this._HINHNHO != value))
				{
					this.OnHINHNHOChanging(value);
					this.SendPropertyChanging();
					this._HINHNHO = value;
					this.SendPropertyChanged("HINHNHO");
					this.OnHINHNHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THONGTIN", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string THONGTIN
		{
			get
			{
				return this._THONGTIN;
			}
			set
			{
				if ((this._THONGTIN != value))
				{
					this.OnTHONGTINChanging(value);
					this.SendPropertyChanging();
					this._THONGTIN = value;
					this.SendPropertyChanged("THONGTIN");
					this.OnTHONGTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATH", DbType="Char(7)")]
		public string MATH
		{
			get
			{
				return this._MATH;
			}
			set
			{
				if ((this._MATH != value))
				{
					if (this._THUONGHIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATHChanging(value);
					this.SendPropertyChanging();
					this._MATH = value;
					this.SendPropertyChanged("MATH");
					this.OnMATHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DANHGIA", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DANHGIA
		{
			get
			{
				return this._DANHGIA;
			}
			set
			{
				if ((this._DANHGIA != value))
				{
					this.OnDANHGIAChanging(value);
					this.SendPropertyChanging();
					this._DANHGIA = value;
					this.SendPropertyChanged("DANHGIA");
					this.OnDANHGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETKM", Storage="_CHITIETKMs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this._CHITIETKMs;
			}
			set
			{
				this._CHITIETKMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETSANPHAM", Storage="_CHITIETSANPHAMs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this._CHITIETSANPHAMs;
			}
			set
			{
				this._CHITIETSANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_THUONGHIEU", ThisKey="MATH", OtherKey="MATH", IsForeignKey=true)]
		public THUONGHIEU THUONGHIEU
		{
			get
			{
				return this._THUONGHIEU.Entity;
			}
			set
			{
				THUONGHIEU previousValue = this._THUONGHIEU.Entity;
				if (((previousValue != value) 
							|| (this._THUONGHIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUONGHIEU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._THUONGHIEU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MATH = value.MATH;
					}
					else
					{
						this._MATH = default(string);
					}
					this.SendPropertyChanged("THUONGHIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIZE")]
	public partial class SIZE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASIZE;
		
		private string _TENSIZE;
		
		private EntitySet<CHITIETSANPHAM> _CHITIETSANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASIZEChanging(string value);
    partial void OnMASIZEChanged();
    partial void OnTENSIZEChanging(string value);
    partial void OnTENSIZEChanged();
    #endregion
		
		public SIZE()
		{
			this._CHITIETSANPHAMs = new EntitySet<CHITIETSANPHAM>(new Action<CHITIETSANPHAM>(this.attach_CHITIETSANPHAMs), new Action<CHITIETSANPHAM>(this.detach_CHITIETSANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASIZE", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASIZE
		{
			get
			{
				return this._MASIZE;
			}
			set
			{
				if ((this._MASIZE != value))
				{
					this.OnMASIZEChanging(value);
					this.SendPropertyChanging();
					this._MASIZE = value;
					this.SendPropertyChanged("MASIZE");
					this.OnMASIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSIZE", DbType="NVarChar(15)")]
		public string TENSIZE
		{
			get
			{
				return this._TENSIZE;
			}
			set
			{
				if ((this._TENSIZE != value))
				{
					this.OnTENSIZEChanging(value);
					this.SendPropertyChanging();
					this._TENSIZE = value;
					this.SendPropertyChanged("TENSIZE");
					this.OnTENSIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_CHITIETSANPHAM", Storage="_CHITIETSANPHAMs", ThisKey="MASIZE", OtherKey="MASIZE")]
		public EntitySet<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this._CHITIETSANPHAMs;
			}
			set
			{
				this._CHITIETSANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = this;
		}
		
		private void detach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATK;
		
		private string _TENDN;
		
		private string _MATKHAU;
		
		private string _MALOAITK;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
		private EntityRef<LOAITK> _LOAITK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATKChanging(string value);
    partial void OnMATKChanged();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnMALOAITKChanging(string value);
    partial void OnMALOAITKChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			this._LOAITK = default(EntityRef<LOAITK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATK", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATK
		{
			get
			{
				return this._MATK;
			}
			set
			{
				if ((this._MATK != value))
				{
					this.OnMATKChanging(value);
					this.SendPropertyChanging();
					this._MATK = value;
					this.SendPropertyChanged("MATK");
					this.OnMATKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="VarChar(20)")]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(32)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAITK", DbType="Char(7)")]
		public string MALOAITK
		{
			get
			{
				return this._MALOAITK;
			}
			set
			{
				if ((this._MALOAITK != value))
				{
					if (this._LOAITK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAITKChanging(value);
					this.SendPropertyChanging();
					this._MALOAITK = value;
					this.SendPropertyChanged("MALOAITK");
					this.OnMALOAITKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MATK", OtherKey="MATK")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITK_TAIKHOAN", Storage="_LOAITK", ThisKey="MALOAITK", OtherKey="MALOAITK", IsForeignKey=true)]
		public LOAITK LOAITK
		{
			get
			{
				return this._LOAITK.Entity;
			}
			set
			{
				LOAITK previousValue = this._LOAITK.Entity;
				if (((previousValue != value) 
							|| (this._LOAITK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITK.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._LOAITK.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MALOAITK = value.MALOAITK;
					}
					else
					{
						this._MALOAITK = default(string);
					}
					this.SendPropertyChanged("LOAITK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUONGHIEU")]
	public partial class THUONGHIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATH;
		
		private string _TENTH;
		
		private string _HINHTH;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATHChanging(string value);
    partial void OnMATHChanged();
    partial void OnTENTHChanging(string value);
    partial void OnTENTHChanged();
    partial void OnHINHTHChanging(string value);
    partial void OnHINHTHChanged();
    #endregion
		
		public THUONGHIEU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATH", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATH
		{
			get
			{
				return this._MATH;
			}
			set
			{
				if ((this._MATH != value))
				{
					this.OnMATHChanging(value);
					this.SendPropertyChanging();
					this._MATH = value;
					this.SendPropertyChanged("MATH");
					this.OnMATHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTH", DbType="NVarChar(50)")]
		public string TENTH
		{
			get
			{
				return this._TENTH;
			}
			set
			{
				if ((this._TENTH != value))
				{
					this.OnTENTHChanging(value);
					this.SendPropertyChanging();
					this._TENTH = value;
					this.SendPropertyChanged("TENTH");
					this.OnTENTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHTH", DbType="Char(50)")]
		public string HINHTH
		{
			get
			{
				return this._HINHTH;
			}
			set
			{
				if ((this._HINHTH != value))
				{
					this.OnHINHTHChanging(value);
					this.SendPropertyChanging();
					this._HINHTH = value;
					this.SendPropertyChanged("HINHTH");
					this.OnHINHTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_SANPHAMs", ThisKey="MATH", OtherKey="MATH")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = null;
		}
	}
}
#pragma warning restore 1591
